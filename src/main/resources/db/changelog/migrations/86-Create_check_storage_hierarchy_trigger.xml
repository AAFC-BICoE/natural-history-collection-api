<?xml version="1.1" encoding="UTF-8" standalone="no" ?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog db/changelog/xsd/dbchangelog-4.4.xsd"
                   objectQuotingStrategy="QUOTE_ONLY_RESERVED_WORDS">
    <changeSet id="86-Create_check_storage_hierarchy_trigger" context="schema-change" author="steven luu">
       <sql>
        CREATE FUNCTION is_in_storage_hierarchy(id integer, parent_id integer) RETURNS boolean AS 
        '
            WITH RECURSIVE get_hierarchy (id, parent_id, rank) AS ( 
            SELECT initial_t.id, initial_t.parent_storage_unit_id, 1 
                FROM storage_unit AS initial_t where initial_t.id = $2 UNION ALL 
                SELECT node.id, node.parent_storage_unit_id, gh.rank + 1 
                FROM get_hierarchy gh, storage_unit AS node WHERE node.id = gh.parent_id)
            SELECT EXISTS (select * from get_hierarchy where id = $1 AND rank > 1);
        '
        LANGUAGE SQL
        RETURNS NULL ON NULL INPUT;

        CREATE OR REPLACE FUNCTION check_storage_hierarchy() RETURNS TRIGGER AS
        '
            BEGIN
                IF NEW.parent_storage_unit_id IS NOT NULL AND NEW.parent_storage_unit_id = NEW.id THEN
                    RAISE EXCEPTION ''parentidentifier can not be equal to id'' USING ERRCODE = ''23D66'', HINT = ''validation.constraint.violation.parentIsSelf'';
                END IF;

                IF (TG_OP = ''UPDATE'' AND NEW.parent_storage_unit_id = OLD.parent_storage_unit_id)
                    THEN RETURN NEW;
                END IF;

                IF NEW.id IS NOT NULL AND NEW.parent_storage_unit_id IS NOT NULL AND is_in_storage_hierarchy(NEW.id, NEW.parent_storage_unit_id) THEN
                    RAISE EXCEPTION ''parentidentifier already in hierarchy'' USING ERRCODE = ''23D66'', HINT = ''validation.constraint.violation.hierarchyViolation'';
                END IF;
                RETURN NEW;
            END;
        '
        LANGUAGE PLPGSQL;

        CREATE TRIGGER check_storage_hierarchy BEFORE INSERT OR UPDATE ON storage_unit
        FOR EACH ROW EXECUTE PROCEDURE check_storage_hierarchy();
       </sql>
    </changeSet>

</databaseChangeLog>
